#!/bin/sh

PROGNAME="$0"

usage() {
	cat <<EOF
NAME
    `basename $PROGNAME` - pick the char at position "n"

SYNOPSIS
    `basename $PROGNAME` [options] position text ...
    `basename $PROGNAME` [options] < file
    `basename $PROGNAME` [options] -r "values" text ...

DESCRIPTION
    Pick the char at position "position".  "position" can be a number,
    or "page"-"line"-"char" in which case "position" equals "char",
    or "m" for the midpoint.

    Works for one-time-pad ciphers, where page-line-char is given.

OPTIONS
    -r "values"	Do a range of values. A letter equals A=1, B=2, ...
    -D lvl	Debug level

EXAMPLES
    Some examples:

	$ geo-char-at 12 "said to her, Do not be afraid, Mary"
	n

	$ geo-char-at 14 After they had heard the king
	e

	$ geo-char-at 1-2-21 "In the sixth month of Elizabeth's pregnancy"
	z

	$ geo-char-at -r "1 3 6" abcdef
	acf

	$ geo-char-at -r "/96/95//69/68/./560/559/558" \`cat tau\`
	4323455

	$ geo-char-at -r "shockvalue" 05818841893035873408602622
	0188300068

	$ geo-char-at m KnOcK kNoCk WhO iS tHeRe?
	w

EOF

	exit 1
}

#
#       Report an error and exit
#
error() {
	echo "`basename $PROGNAME`: $1" >&2
	exit 1
}

debug() {
	if [ $DEBUG -ge $1 ]; then
	    echo "`basename $PROGNAME`: $2" >&2
	fi
}

#
#       Process the options
#
DEBUG=0
RANGE=
#unset OPTIND
while getopts "r:D:h?" opt
do
	case $opt in
	r)	RANGE=`echo "$OPTARG" | tr -d "," | sed 's#[\./]# #g'`
		case "$RANGE" in
		[a-z]*|[A-Z]*)
		    RANGE=`
			echo "$RANGE" | tr -d ' ' | sed 's/./& /g' |
			tr ' A-Z' '\012a-z' | awk '
			BEGIN{for(n=0;n<256;n++)ord[sprintf("%c",n)]=n}
			{
			    if ($0 == "") next
			    print ord[$0] - ord["a"] + 1
			}'`
		    ;;
		esac
		;;
	D)	DEBUG="$OPTARG";;
	h|\?)	usage;;
	esac
done
shift `expr $OPTIND - 1`

#
#	Main Program
#
if [ "$RANGE" != "" ]; then
    if [ $# -lt 1 ]; then
	usage
    fi

    for i in $RANGE; do
	echo "$*" \
	| tr -d " .,;â€œ™˜" \
	| tr A-Z a-z \
	| cut -c $i | tr -d "\012"
    done
    echo
else
    if [ $# -lt 2 ]; then
	while read char text; do
	    case "$char" in
	    [0-9]*)	;;
	    *)		continue;;
	    esac
	    a="$a"`echo "$text" \
	    | tr -d " .,;â€œ™˜" \
	    | tr A-Z a-z \
	    | cut -c $char`
	done
	echo $a
	exit
    fi

    char=` echo "$1" | sed 's/.*-//' `
    shift
    if [ "$char" = m ]; then
	len=`addletters -l $* | sed 's/.* = //' `
	char=`dc -e "$len 1+2/p"`
    fi

    echo "$*" \
    | tr -d " .,;â€œ™˜" \
    | tr A-Z a-z \
    | cut -c $char
fi
