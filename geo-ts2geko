#!/bin/sh

#
#	skel.sh:
#

PROGNAME="$0"

usage() {
	cat <<EOF
NAME
    `basename $PROGNAME` - Convert tabsep to geko tabsep

SYNOPSIS
    `basename $PROGNAME` [options]

DESCRIPTION
    Convert tabsep to geko tabsep.  I.E. change the GID and remove
    events that are not within 2 days.

OPTIONS
    -D lvl	Debug level
EOF

	exit 1
}

#
#       Report an error and exit
#
error() {
	echo "`basename $PROGNAME`: $1" >&2
	exit 1
}

debug() {
	if [ $DEBUG -ge $1 ]; then
	    echo "`basename $PROGNAME`: $2" >&2
	fi
}

#
#       Process the options
#
DEBUG=0
#unset OPTIND
while getopts "D:h?" opt
do
	case $opt in
	D)	DEBUG="$OPTARG";;
	h|\?)	usage;;
	esac
done
shift `expr $OPTIND - 1`

#
#	Main Program
#
yyyymmdd=`date +%Y%m%d`
awk -F'	' -v yyyymmdd=$yyyymmdd '
BEGIN {
}
{
    if ($2 ~ "^GC" && $24 == "Micro") { gid = "m" substr($2, 3) }
    else if ($2 ~ "^GC" && $24 == "Small") { gid = "s" substr($2, 3) }
    else if ($2 ~ "^GC" && $24 == "Regular") { gid = "r" substr($2, 3) }
    else if ($2 ~ "^GC" && $24 == "Large") { gid = "l" substr($2, 3) }
    else if ($2 ~ "^GC" && $24 == "Unknown") { gid = "u" substr($2, 3) }
    else if ($2 ~ "^GC") { gid = substr($2, 2) }
    else { gid = $2 }

    if ($25 ~ "Event" && $29 < yyyymmdd)
	next	# Too Late
    else if ($25 ~ "Event" && ($29 >= yyyymmdd+0 && $29 <= yyyymmdd+1) )
	{}	# Just Right!
    else if ($25 ~ "Event" && $29 > yyyymmdd)
	next	# Too early!

    for (i = 1; i < 2; ++i)
	printf("%s	", $i)
    printf("%s	", gid)
    for (i = 3; i < 31; ++i)
	printf("%s	", $i)
    printf("%s\n", $31)
}
' $*
