#!/bin/sh

PROGNAME="$0"

usage() {
	cat <<EOF
NAME
    `basename $PROGNAME` - braille to text translator

SYNOPSIS
    `basename $PROGNAME` [options] [braille-cell] ...

DESCRIPTION
    Takes an encoding of a braille cell(s) and translates that into text.

    Braille cell:

	row1	1 4
	row2	2 5
	row3	3 6

    Also takes a two digit octal representation.

OPTIONS
    -D lvl	Debug level

EXAMPLE
    Decode north coordinates:

	$ echo "1-3-4-5 3-4-5-6 1-5 1 1-4-5 2-4 1-2-4 1-2-4-5 2-4-5" |
	    braille2text 
	n5149670

	$ echo "2-4-5-6 3-4-5-6 1-2-5 2-4-5 2-4-5 1-2 1 1-2-4" |
	    braille2text 
	w800216

	$ braille2text 56 52 72 36 62 64 52 72 36 57 64 52 51 72
	northfortyfour

EOF

	exit 1
}

#
#       Report an error and exit
#
error() {
	echo "`basename $PROGNAME`: $1" >&2
	exit 1
}

debug() {
	if [ $DEBUG -ge $1 ]; then
	    echo "`basename $PROGNAME`: $2" >&2
	fi
}

#
#       Process the options
#
DEBUG=0
while getopts "D:h?" opt
do
	case $opt in
	D)	DEBUG="$OPTARG";;
	h|\?)	usage;;
	esac
done
shift `expr $OPTIND - 1`

#
#	Main Program
#
doit() {
    tr -cs "[:graph:]" "\n" |
    awk '
    /^1$/ { printf "%s", number ? "1" : "a"; next }
    /^1-2$/ { printf "%s", number ? "2" : "b"; next }
    /^1-4$/ { printf "%s", number ? "3" : "c"; next }
    /^1-4-5$/ { printf "%s", number ? "4" : "d"; next }
    /^1-5$/ { printf "%s", number ? "5" : "e"; next }
    /^1-2-4$/ { printf "%s", number ? "6" : "f"; next }
    /^1-2-4-5$/ { printf "%s", number ? "7" : "g"; next }
    /^1-2-5$/ { printf "%s", number ? "8" : "h"; next }
    /^2-4$/ { printf "%s", number ? "9" : "i"; next }
    /^2-4-5$/ { printf "%s", number ? "0" : "j"; next }
    /^1-3$/ { printf "k"; next }
    /^1-2-3$/ { printf "l"; next }
    /^1-3-4$/ { printf "m"; next }
    /^1-3-4-5$/ { printf "n"; next }
    /^1-3-5$/ { printf "o"; next }
    /^1-2-3-4$/ { printf "p"; next }
    /^1-2-3-4-5$/ { printf "q"; next }
    /^1-2-3-5$/ { printf "r"; next }
    /^2-3-4$/ { printf "s"; next }
    /^2-3-4-5$/ { printf "t"; next }
    /^1-3-6$/ { printf "u"; next }
    /^1-2-3-6$/ { printf "v"; next }
    /^2-4-5-6$/ { printf "w"; next }
    /^1-3-4-6$/ { printf "x"; next }
    /^1-3-4-5-6$/ { printf "y"; next }
    /^1-3-5-6$/ { printf "z"; next }
    /^3$/ { printf "%c", 39; next }
    /^2-5-6$/ { printf "."; next }
    /^2$/ { printf ","; next }
    /^2-3$/ { printf ";"; next }
    /^2-3-5$/ { printf "!"; next }
    /^2-3-6$/ { printf "\""; next }
    /^3-5-6$/ { printf "\""; next }
    /^3-5-6$/ { printf ")"; next }	# netherlands
    /^3-5$/ { printf "*"; next }
    /^2-3-6$/ { printf "?"; next }
    /^2-3-5-6$/ { printf "/"; next }
    /^3-6$/ { printf "-"; next }
    /^4-6$/ { printf "."; next }	# really italics indicator
    /^2-6$/ { printf "?"; next }
    /^0$/ { if (0) number=0; printf(" "); next }	# Space
    /^6$/ { capital=1; next }	# Capital
    /^3-4-5-6$/ { number=1; next }	# Number
    /^5-6$/ { number=0; next }	# Letter

    # octal encoding
    /^17$/ { number=1; next }
    /^01$/ { number=0; next }
    /^05$/ { capital=1; next }
    /^21$/ { printf "?"; next }
    /^12$/ { printf "*"; next }
    /^13$/ { printf "\""; next }
    /^13$/ { printf ")"; next }	# netherlands
    /^35$/ { printf "Ã¨"; next }	# netherlands
    /^40$/ { printf "%s", number ? "1" : "a"; next }
    /^60$/ { printf "%s", number ? "2" : "b"; next }
    /^44$/ { printf "%s", number ? "3" : "c"; next }
    /^46$/ { printf "%s", number ? "4" : "d"; next }
    /^42$/ { printf "%s", number ? "5" : "e"; next }
    /^64$/ { printf "%s", number ? "6" : "f"; next }
    /^66$/ { printf "%s", number ? "7" : "g"; next }
    /^62$/ { printf "%s", number ? "8" : "h"; next }
    /^24$/ { printf "%s", number ? "9" : "i"; next }
    /^26$/ { printf "%s", number ? "0" : "j"; next }
    /^50$/ { printf "k"; next }
    /^70$/ { printf "l"; next }
    /^54$/ { printf "m"; next }
    /^56$/ { printf "n"; next }
    /^52$/ { printf "o"; next }
    /^74$/ { printf "p"; next }
    /^76$/ { printf "q"; next }
    /^72$/ { printf "r"; next }
    /^34$/ { printf "s"; next }
    /^36$/ { printf "t"; next }
    /^51$/ { printf "u"; next }
    /^71$/ { printf "v"; next }
    /^27$/ { printf "w"; next }
    /^55$/ { printf "x"; next }
    /^57$/ { printf "y"; next }
    /^53$/ { printf "z"; next }
    /^23$/ { printf "."; next }
    /^20$/ { printf ","; next }
    /^30$/ { printf ";"; next }
    /^32$/ { printf "!"; next }
    /^31$/ { printf "?"; next }
    /^33$/ { printf "/"; next }
    /^11$/ { printf "-"; next }
    /^00$/ { printf " "; next }
    { printf "{%s}", $0 }
    END { printf "\n" }
    '
}
if [ $# = 0 ]; then
    doit
else
    echo "$*" | doit
fi
